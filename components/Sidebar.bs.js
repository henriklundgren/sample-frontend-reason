// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as $$String from "bs-platform/lib/es6/string.js";
import * as CurrencyTools from "./CurrencyTools.bs.js";
import * as MaterialUi_Grid from "@jsiebern/bs-material-ui/src/MaterialUi_Grid.bs.js";
import * as MaterialUi_Types from "@jsiebern/bs-material-ui/src/MaterialUi_Types.bs.js";
import * as Core from "@material-ui/core";
import * as MaterialUi_Typography from "@jsiebern/bs-material-ui/src/MaterialUi_Typography.bs.js";
import * as Menu from "@material-ui/icons/Menu";
import * as Styles from "@material-ui/core/styles";
import * as Close from "@material-ui/icons/Close";
import * as MaterialUi_ThemeProvider from "@jsiebern/bs-material-ui/src/MaterialUi_ThemeProvider.bs.js";

function Sidebar$Details(Props) {
  var accountName = Props.accountName;
  var type_ = Props.type_;
  var status = Props.status;
  var balance = Props.balance;
  var currency = Props.currency;
  var notes = Props.notes;
  return React.createElement(Core.Card, {
              children: null,
              style: {
                width: "365px"
              }
            }, React.createElement(Core.CardMedia, {
                  src: "avatar",
                  style: {
                    height: "140px"
                  }
                }), React.createElement(Core.CardContent, {
                  children: null
                }, React.createElement(Core.Typography, {
                      children: accountName,
                      color: "primary",
                      component: MaterialUi_Typography.Component.string("h2"),
                      gutterBottom: true,
                      variant: "h4"
                    }), React.createElement(Core.Grid, {
                      children: null,
                      container: true
                    }, React.createElement(Core.Grid, {
                          children: null,
                          item: true,
                          xs: MaterialUi_Grid.Xs._6
                        }, React.createElement(Core.Typography, {
                              children: "Type",
                              variant: "button"
                            }), React.createElement(Core.Typography, {
                              children: $$String.capitalize_ascii(type_),
                              gutterBottom: true,
                              variant: "body1"
                            }), React.createElement(Core.Typography, {
                              children: "Status",
                              variant: "button"
                            }), React.createElement(Core.Typography, {
                              children: status,
                              gutterBottom: true
                            }), React.createElement(Core.Typography, {
                              children: "Balance",
                              variant: "button"
                            }), React.createElement(Core.Typography, {
                              children: CurrencyTools.CurrencyTools.toCurrencyValue("$", balance),
                              gutterBottom: true
                            })), React.createElement(Core.Grid, {
                          children: null,
                          item: true,
                          xs: MaterialUi_Grid.Xs._6
                        }, React.createElement(Core.Typography, {
                              children: "Account name",
                              variant: "button"
                            }), React.createElement(Core.Typography, {
                              children: accountName,
                              gutterBottom: true
                            }), React.createElement(Core.Typography, {
                              children: "Currency",
                              variant: "button"
                            }), React.createElement(Core.Typography, {
                              children: currency,
                              gutterBottom: true
                            }), React.createElement(Core.Typography, {
                              children: "Notes",
                              variant: "button"
                            }), React.createElement(Core.Typography, {
                              children: notes,
                              gutterBottom: true
                            })))));
}

var Details = {
  make: Sidebar$Details,
  $$default: Sidebar$Details
};

var CloseIcon = {};

var MenuIcon = {};

function Sidebar(Props) {
  var selection = Props.selection;
  var onCloseSelection = Props.onCloseSelection;
  var palette = {
    type: "dark"
  };
  var options = {
    palette: palette
  };
  var theme = Styles.createMuiTheme(options);
  var typography = {
    fontSize: 12
  };
  var theme2 = Styles.createMuiTheme({
        typography: typography
      });
  var content = selection !== undefined ? React.createElement(React.Fragment, undefined, React.createElement(MaterialUi_ThemeProvider.make, {
              children: React.createElement(Sidebar$Details, {
                    accountName: selection.accountName,
                    type_: selection.type_,
                    status: selection.status,
                    balance: selection.balance,
                    currency: selection.currency,
                    notes: selection.notes
                  }),
              theme: theme2
            }), React.createElement(Core.Grid, {
              children: React.createElement(Core.Toolbar, {
                    children: React.createElement(Core.IconButton, {
                          onClick: onCloseSelection,
                          children: React.createElement(Close.default, {})
                        })
                  })
            })) : null;
  return React.createElement(React.Fragment, undefined, React.createElement(MaterialUi_ThemeProvider.make, {
                  children: React.createElement(Core.Paper, {
                        children: React.createElement(Core.Grid, {
                              alignItems: "center",
                              children: null,
                              container: true,
                              direction: "column",
                              justify: "center",
                              wrap: "nowrap",
                              style: {
                                height: "100%"
                              }
                            }, React.createElement(Core.Fab, {
                                  style: {
                                    position: "absolute",
                                    right: "24px",
                                    top: "24px"
                                  },
                                  children: React.createElement(Menu.default, {}),
                                  color: "default"
                                }), content),
                        elevation: MaterialUi_Types.$$Number.$$int(0),
                        square: true,
                        style: {
                          height: "100%",
                          minHeight: "100vh"
                        }
                      }),
                  theme: theme
                }));
}

var make = Sidebar;

var $$default = Sidebar;

export {
  Details ,
  CloseIcon ,
  MenuIcon ,
  make ,
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
