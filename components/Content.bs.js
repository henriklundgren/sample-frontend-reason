// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as MyType from "./MyType.bs.js";
import * as InvoicesTable from "./InvoicesTable.bs.js";
import * as Belt_SortArray from "bs-platform/lib/es6/belt_SortArray.js";
import * as MaterialUi_Types from "@jsiebern/bs-material-ui/src/MaterialUi_Types.bs.js";
import * as Core from "@material-ui/core";
import * as MoreHoriz from "@material-ui/icons/MoreHoriz";

var MoreIcon = {};

function Content$Header(Props) {
  var title = Props.title;
  return React.createElement(Core.AppBar, {
              elevation: MaterialUi_Types.$$Number.$$int(0),
              children: React.createElement(Core.Toolbar, {
                    children: null
                  }, React.createElement(Core.Typography, {
                        children: title,
                        color: "primary",
                        variant: "h6"
                      }), React.createElement("div", {
                        style: {
                          flex: "1"
                        }
                      }), React.createElement(Core.IconButton, {
                        children: React.createElement(MoreHoriz.default, {})
                      })),
              color: "transparent",
              position: "static"
            });
}

var Header = {
  make: Content$Header,
  $$default: Content$Header
};

function Content(Props) {
  var setSelection = Props.setSelection;
  var selection = Props.selection;
  var items = Props.items;
  var match = React.useState(function () {
        return "Desc";
      });
  var order = match[0];
  var match$1 = React.useState(function () {
        return "type_";
      });
  var orderBy = match$1[0];
  var sort = function (items) {
    var res;
    if (orderBy !== undefined) {
      switch (orderBy) {
        case "balance" :
            res = Belt_SortArray.stableSortBy(items, MyType.MyType.compareByBalance);
            break;
        case "accountName" :
        case "currency" :
            res = Belt_SortArray.stableSortBy(items, MyType.MyType.compareByAccountName);
            break;
        case "status" :
            res = Belt_SortArray.stableSortBy(items, MyType.MyType.compareByStatus);
            break;
        default:
          res = Belt_SortArray.stableSortBy(items, MyType.MyType.compareByType);
      }
    } else {
      res = items;
    }
    if (order === "Asc") {
      return res.reverse();
    } else {
      return res;
    }
  };
  return React.createElement(React.Fragment, undefined, React.createElement(Content$Header, {
                  title: "All invoices - 2016"
                }), React.createElement(Core.Grid, {
                  children: React.createElement(InvoicesTable.make, {
                        order: order,
                        setOrder: match[1],
                        orderBy: orderBy,
                        setOrderBy: match$1[1],
                        items: sort(items),
                        setSelection: setSelection,
                        selection: selection
                      }),
                  container: true,
                  direction: "column",
                  item: true,
                  wrap: "nowrap"
                }));
}

var make = Content;

var $$default = Content;

export {
  MoreIcon ,
  Header ,
  make ,
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
